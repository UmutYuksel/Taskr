@model List<GorevYonetimSistemi.Business.Dtos.User.UserDto>

<div class="mt-16 container">
  <div class="relative overflow-x-auto shadow-md sm:rounded-lg">
    <div class="flex items-center justify-between flex-wrap space-y-4 md:space-y-0 pb-4 bg-white dark:bg-darkContent-800 p-3">
      <label for="table-search" class="sr-only">Search</label>
      <div class="relative">
        <input type="text" id="table-search-users"
          class="block p-2 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg w-80 bg-gray-50  focus-visible:outline-darkAccent-600 focus-visible:border-darkAccent-600 dark:bg-darkContent-500 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
          placeholder="Search for users">
      </div>
      <div class="relative">
        <label for="role-filter" class="sr-only">Filter by Role</label>
        <select id="role-filter"
          class="block p-2 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg w-80 bg-gray-50  focus-visible:outline-darkAccent-600 focus-visible:border-darkAccent-600 dark:bg-darkContent-500 dark:border-gray-600 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
          <option value="">All Roles</option>
          <option value="Admin">Admin</option>
          <option value="User">User</option>
          <option value="Manager">Manager</option>
        </select>
      </div>
      @if (TempData["Error Message"] != null)
      {
        <div class="text-red-500">
          @TempData["Error Message"]
        </div>
      }
    </div>

    <table class="w-full text-sm text-left text-gray-500 dark:text-gray-400">
      <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-darkContent-500 dark:text-gray-400">
        <tr>
          <th scope="col" class="px-6 py-3 text-center">Name</th>
          <th scope="col" class="px-6 py-3 text-center">Role</th>
          <th scope="col" class="px-6 py-3 text-center">Action</th>
        </tr>
      </thead>
      <tbody>
        @if (Model == null || !Model.Any())
        {
          <div>No users found.</div>
        }
        else
        {
          @foreach (var user in Model)
          {
            <tr class="bg-white dark:bg-darkContent-800 hover:bg-gray-50 dark:hover:bg-gray-600">
              <td class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white text-center">
                <div class="flex items-center justify-center">
                  <div class="pl-3 text-left">
                    <div class="text-base font-semibold">@user.Username</div>
                    <div class="font-normal text-gray-500">@user.Email</div>
                  </div>
                </div>
              </td>
              <td class="px-6 py-4 text-center">@user.Role</td>
              <td class="px-6 py-4 text-center">
                <div class="flex justify-center space-x-2">
                  <button
                    class="bg-darkAccent-500 hover:bg-darkAccent-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:ring-2 focus:ring-darkAccent-500"
                    data-userid="@user.UserId" data-username="@user.Username" data-email="@user.Email"
                    data-role="@user.Role" data-password="@user.Password" onclick="showModal(event)">
                    <i class="fa fa-edit fa-md mr-1" aria-hidden="true"></i>
                    <span>Edit</span>
                  </button>
                  <form method="post" action="/Admin/DeleteUser">
                    <input type="hidden" name="userId" value="@user.UserId" />
                    <button type="submit"
                      class="bg-darkAccent-500 hover:bg-darkAccent-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:ring-2 focus:ring-darkAccent-500">
                      <i class="fa fa-trash fa-md mr-1" aria-hidden="true"></i>
                      <span>Delete</span>
                    </button>
                  </form>
                </div>
              </td>
            </tr>
          }
        }
      </tbody>
    </table>
  </div>
</div>


<!-- Modal for Editing Role -->
<div id="editModal" class="fixed inset-0 z-50 flex items-center justify-center bg-darkContent-1000 bg-opacity-70 hidden">
  <div class="bg-white dark:bg-darkContent-800 p-6 rounded-lg w-96">
    <div class="flex justify-between items-center mb-4">
      <h5 class="text-xl font-semibold text-gray-900 dark:text-white">Edit User Role</h5>
      <button type="button" class="text-gray-500 dark:text-gray-400" onclick="closeModal()">
        <span class="text-2xl">&times;</span>
      </button>
    </div>
    <form id="editUserForm" method="post" action="@Url.Action("UpdateUser", "Admin")">
      <div class="space-y-4">
        <input type="hidden" id="UserId" name="UserId" />
        <input type="hidden" id="Username" name="Username" />
        <input type="hidden" id="Email" name="Email" />
        <input type="hidden" id="Password" name="Password" />
        <div>
          <label for="Role" class="block text-sm font-medium text-gray-700 dark:text-darkContent-300">Role</label>
          <select id="Role" name="Role"
            class="mt-1 block w-full px-3 py-2 text-sm text-gray-900 bg-gray-50 border border-gray-300 rounded-md focus:bg-darkAccent-500 focus:border-darkAccent-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white dark:focus:ring-darkAccent-500 dark:focus:border-darkAccent-500">
            <option value="Admin">Admin</option>
            <option value="User">User</option>
            <option value="Manager">Manager</option>
          </select>
        </div>
      </div>
      <div class="mt-6 flex justify-end space-x-2">
        <button type="button"
          class="px-4 py-2 text-sm text-gray-600 dark:text-gray-300 bg-gray-200 rounded-md hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600"
          onclick="closeModal()">Close</button>
        <button type="submit"
          class="px-4 py-2 text-sm text-white bg-darkAccent-500 rounded-md hover:bg-darkAccent-700">Save
          changes</button>
      </div>
    </form>
  </div>
</div>

<!-- JavaScript for Modal Operations -->
<script>
  // Modal'ı göster
  function showModal(event) {
    // Modalı gösterme
    document.getElementById('editModal').classList.remove('hidden');

    // Buton verilerini al
    var button = event.target.closest('button');
    var userId = button.getAttribute('data-userid');
    var username = button.getAttribute('data-username');
    var email = button.getAttribute('data-email');
    var role = button.getAttribute('data-role');
    var password = button.getAttribute('data-password');

    // Form alanlarını doldur
    document.getElementById('UserId').value = userId;
    document.getElementById('Username').value = username;
    document.getElementById('Email').value = email;
    document.getElementById('Role').value = role;
    document.getElementById('Password').value = password;
  }

  // Modal'ı gizle
  function closeModal() {
    document.getElementById('editModal').classList.add('hidden');
  }
</script>

<script>
  // 'table-search-users' input'u üzerinde her değişiklikte filtreleme işlemi yap
  document.getElementById('table-search-users').addEventListener('input', function () {
    var searchValue = this.value.toLowerCase(); // Kullanıcı arama terimi
    var table = document.querySelector('table tbody'); // Tablo tbody kısmı
    var rows = table.querySelectorAll('tr'); // Tüm satırlar

    rows.forEach(function (row) {
      var usernameCell = row.querySelector('td:first-child'); // Kullanıcı adı hücresi
      if (usernameCell) {
        var usernameText = usernameCell.textContent.toLowerCase();

        // Eğer kullanıcı adı, arama değerini içeriyorsa satırı göster, yoksa gizle
        if (usernameText.includes(searchValue)) {
          row.style.display = ''; // Göster
        } else {
          row.style.display = 'none'; // Gizle
        }
      }
    });
  });
</script>

<script>
  // Role filtreleme işlevi
  document.getElementById('role-filter').addEventListener('change', function () {
    var selectedRole = this.value.toLowerCase(); // Seçilen role
    var table = document.querySelector('table tbody'); // Tablo tbody kısmı
    var rows = table.querySelectorAll('tr'); // Tüm satırlar

    rows.forEach(function (row) {
      var roleCell = row.querySelector('td:nth-child(2)'); // Role hücresi
      if (roleCell) {
        var roleText = roleCell.textContent.toLowerCase();

        // Eğer role hücresindeki metin, seçilen role eşleşiyorsa satırı göster
        if (selectedRole === '' || roleText.includes(selectedRole)) {
          row.style.display = ''; // Göster
        } else {
          row.style.display = 'none'; // Gizle
        }
      }
    });
  });
</script>